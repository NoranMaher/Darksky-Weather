{"ast":null,"code":"import axios from \"axios\";\nimport { API_KEY } from \"keysConfig.js\";\nimport React, { useState } from \"react\";\nexport default {\n  async getData() {\n    let res, lat, long;\n\n    try {\n      if (navigator.geolocation) {\n        console.log(navigator.geolocation);\n        lat = navigator.geolocation.getCurrentPosition.coords.latitude;\n        long = navigator.geolocation.getCurrentPosition.coords.longitude;\n        console.log(lat, long);\n        res = await axios.get(`https://api.darksky.net/forecast/${API_KEY}/[latitude],[longitude]`);\n      } else {\n        console.log(\"no user allow\");\n      }\n\n      return res;\n    } catch (error) {\n      return error;\n    }\n  }\n\n};","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/src/api.js"],"names":["axios","API_KEY","React","useState","getData","res","lat","long","navigator","geolocation","console","log","getCurrentPosition","coords","latitude","longitude","get","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe;AACb,QAAMC,OAAN,GAAgB;AACd,QAAIC,GAAJ,EAASC,GAAT,EAAcC,IAAd;;AAEA,QAAI;AAEF,UAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACC,WAAtB;AACAH,QAAAA,GAAG,GAAGE,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAAyCC,MAAzC,CAAgDC,QAAtD;AACAP,QAAAA,IAAI,GAAGC,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAAyCC,MAAzC,CAAgDE,SAAvD;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAAiBC,IAAjB;AACAF,QAAAA,GAAG,GAAG,MAAML,KAAK,CAACgB,GAAN,CACT,oCAAmCf,OAAQ,yBADlC,CAAZ;AAGD,OARD,MAQO;AACLS,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAED,aAAON,GAAP;AACD,KAfD,CAeE,OAAOY,KAAP,EAAc;AACd,aAAOA,KAAP;AACD;AACF;;AAtBY,CAAf","sourcesContent":["import axios from \"axios\";\nimport { API_KEY } from \"keysConfig.js\";\nimport React, { useState } from \"react\";\n\nexport default {\n  async getData() {\n    let res, lat, long;\n\n    try {\n    \n      if (navigator.geolocation) {\n        console.log(navigator.geolocation)\n        lat = navigator.geolocation.getCurrentPosition.coords.latitude;\n        long = navigator.geolocation.getCurrentPosition.coords.longitude;\n        console.log(lat, long);\n        res = await axios.get(\n          `https://api.darksky.net/forecast/${API_KEY}/[latitude],[longitude]`\n        );\n      } else {\n        console.log(\"no user allow\");\n      }\n\n      return res;\n    } catch (error) {\n      return error;\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}