{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Container = () => {\n  _s();\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  function showPosition(position) {\n    x.innerHTML = \"Latitude: \" + position.coords.latitude + \"<br>Longitude: \" + position.coords.longitude;\n  }\n\n  useEffect(() => {\n    getLocation();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header-bgImg\",\n        src: MainBG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Forcast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/src/components/Container.js"],"names":["React","useEffect","Header","MainBanner","Forcast","MainBG","Container","getLocation","navigator","geolocation","getCurrentPosition","showPosition","x","innerHTML","position","coords","latitude","longitude"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,WAASC,WAAT,GAAuB;AACrB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,KAFD,MAEO;AACLC,MAAAA,CAAC,CAACC,SAAF,GAAc,+CAAd;AACD;AACF;;AAED,WAASF,YAAT,CAAsBG,QAAtB,EAAgC;AAC9BF,IAAAA,CAAC,CAACC,SAAF,GAAc,eAAeC,QAAQ,CAACC,MAAT,CAAgBC,QAA/B,GACd,iBADc,GACMF,QAAQ,CAACC,MAAT,CAAgBE,SADpC;AAED;;AACDhB,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,WAAW;AACd,GAFQ,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEF;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1BD;;GAAMC,S;;KAAAA,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React,{useEffect} from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\n\nconst Container = () => {\n    function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition);\n      } else {\n        x.innerHTML = \"Geolocation is not supported by this browser.\";\n      }\n    }\n    \n    function showPosition(position) {\n      x.innerHTML = \"Latitude: \" + position.coords.latitude +\n      \"<br>Longitude: \" + position.coords.longitude;\n    }\n    useEffect(()=>{\n        getLocation();\n    });\n    return (\n        <div className=\"container\">\n            <Header className=\"header\"/>\n            <div className=\"header-bg\">\n                <img className=\"header-bgImg\" src={MainBG} />\n            </div>\n            <MainBanner />\n            <Forcast />\n        </div>\n    );\n};\nexport default Container;"]},"metadata":{},"sourceType":"module"}