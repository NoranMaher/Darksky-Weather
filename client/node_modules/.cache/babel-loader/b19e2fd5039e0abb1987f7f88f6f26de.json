{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/client/src/components/ForcastCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport IconSrc from \"../imgs/weather-icons/cloudy.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForcastCard = props => {\n  _s();\n\n  const {\n    icon,\n    temp,\n    title,\n    type\n  } = props;\n  const [cardTtitle, setCardTitle] = useState(\"\");\n\n  const unixToDateTime = unix_timestamp => {\n    var options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const dateVal = new Date(unix_timestamp).toLocaleDateString('en-US', options);\n    console.log(dateVal);\n    return dateVal;\n  };\n\n  useEffect(() => {\n    if (type == \"daily\") {\n      let day = unixToDateTime(title);\n    } else if (type == \"hourly\") {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: IconSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForcastCard, \"+Wl5WmhM+JISUIl8epWJ6ChuBDA=\");\n\n_c = ForcastCard;\nexport default ForcastCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForcastCard\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/client/src/components/ForcastCard.js"],"names":["React","useEffect","useState","IconSrc","ForcastCard","props","icon","temp","title","type","cardTtitle","setCardTitle","unixToDateTime","unix_timestamp","options","weekday","year","month","day","dateVal","Date","toLocaleDateString","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,IAAN;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA;AAAjB,MAAyBJ,KAA/B;AACJ,QAAM,CAACK,UAAD,EAAYC,YAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;;AAEE,QAAMU,cAAc,GAAIC,cAAD,IAAoB;AACzC,QAAIC,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,IAAI,EAAE,SAAzB;AAAoCC,MAAAA,KAAK,EAAE,MAA3C;AAAmDC,MAAAA,GAAG,EAAE;AAAxD,KAAd;AACA,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASP,cAAT,EAAyBQ,kBAAzB,CAA4C,OAA5C,EAAoDP,OAApD,CAAhB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,WAAOA,OAAP;AACD,GALD;;AAMAlB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGQ,IAAI,IAAE,OAAT,EAAiB;AACvB,UAAIS,GAAG,GAAGN,cAAc,CAACJ,KAAD,CAAxB;AACO,KAFD,MAGK,IAAGC,IAAI,IAAE,QAAT,EAAkB,CAEtB;AACJ,GAPQ,EAOP,EAPO,CAAT;AASD,sBACG;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEL;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,gBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AASA,CA5BD;;GAAMH,W;;KAAAA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport IconSrc from \"../imgs/weather-icons/cloudy.png\";\n\nconst ForcastCard = (props) => {\n    const {icon,temp,title,type} = props;\nconst [cardTtitle,setCardTitle]= useState(\"\");\n\n  const unixToDateTime = (unix_timestamp) => {\n    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const dateVal = new Date(unix_timestamp).toLocaleDateString('en-US',options);\n    console.log(dateVal)\n    return dateVal;\n  };\n  useEffect(()=>{\n      if(type==\"daily\"){\nlet day = unixToDateTime(title);\n      }\n      else if(type==\"hourly\"){\n\n      }\n  },[])\n\n return (\n    <div>\n        <h3>{title}</h3>\n        <div>\n            <img src={IconSrc}/>\n        </div>\n        <span>{temp}</span>\n    </div>\n    );\n};\nexport default ForcastCard;"]},"metadata":{},"sourceType":"module"}