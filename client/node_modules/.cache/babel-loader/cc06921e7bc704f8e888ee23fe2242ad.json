{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/client/src/components/HourlyForcast.js\";\nimport React from \"react\";\nimport ForcastCard from \"components/ForcastCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HourlyForcast = props => {\n  const {\n    hourly\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: hourly.data.slice(0, 24).map((item, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(ForcastCard, {\n        type: \"hourly\",\n        temp: item.temperature,\n        icon: item.icon,\n        title: item.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = HourlyForcast;\nexport default HourlyForcast;\n\nvar _c;\n\n$RefreshReg$(_c, \"HourlyForcast\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/client/src/components/HourlyForcast.js"],"names":["React","ForcastCard","HourlyForcast","props","hourly","data","slice","map","item","key","temperature","icon","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,sBACE;AAAA,cACGC,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,EAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAMC,GAAN,kBAC5B;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAED,IAAI,CAACE,WAAtC;AAAmD,QAAA,IAAI,EAAEF,IAAI,CAACG,IAA9D;AAAoE,QAAA,KAAK,EAAEH,IAAI,CAACI;AAAhF;AAAA;AAAA;AAAA;AAAA;AADF,OAASH,GAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;KAAMP,a;AAYN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport ForcastCard from \"components/ForcastCard\";\nconst HourlyForcast = (props) => {\n  const { hourly } = props;\n  return (\n    <ul>\n      {hourly.data.slice(0, 24).map((item,key) => (\n        <li key={key}>\n          <ForcastCard type=\"hourly\" temp={item.temperature} icon={item.icon} title={item.time} />\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default HourlyForcast;\n"]},"metadata":{},"sourceType":"module"}