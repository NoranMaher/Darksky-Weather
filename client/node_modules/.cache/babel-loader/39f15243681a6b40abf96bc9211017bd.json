{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/client/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Container = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [userCoordinates, setUserCoordinates] = useState({\n    'lat': null,\n    'long': null\n  });\n  const APP_URL = \"http://localhost:5000/weather/\";\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      }, error => {\n        setLatitude(-1);\n        setLongitude(-1);\n      });\n    } else {\n      setLatitude(-1);\n      setLongitude(-1);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n  useEffect(() => {\n    fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1`).then(response => response.json()).then(location => {\n      console.log(location);\n    });\n  }, [longitude, latitude]);\n  useEffect(() => {\n    fetch(APP_URL + `?lat=${latitude}&long=${longitude}`).then(response => response.json()).then(forcast => {\n      console.log(forcast);\n    });\n  }, [longitude, latitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header-bgImg\",\n        src: MainBG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forcast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Container, \"XRsfqcDkB978ErGDreiMaJFWFEs=\");\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/client/src/components/Container.js"],"names":["React","useEffect","useState","Header","MainBanner","Forcast","MainBG","Container","loading","setLoading","userCoordinates","setUserCoordinates","APP_URL","getLocation","navigator","geolocation","getCurrentPosition","position","setLatitude","coords","latitude","setLongitude","longitude","error","fetch","then","response","json","location","console","log","forcast"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC;AAAC,WAAM,IAAP;AAAc,YAAO;AAArB,GAAD,CAAtD;AAEA,QAAMU,OAAO,GAAG,gCAAhB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;AACZC,QAAAA,WAAW,CAACD,QAAQ,CAACE,MAAT,CAAgBC,QAAjB,CAAX;AACAC,QAAAA,YAAY,CAACJ,QAAQ,CAACE,MAAT,CAAgBG,SAAjB,CAAZ;AACD,OAJH,EAKGC,KAAD,IAAW;AACTL,QAAAA,WAAW,CAAC,CAAC,CAAF,CAAX;AACAG,QAAAA,YAAY,CAAC,CAAC,CAAF,CAAZ;AACD,OARH;AAUD,KAXD,MAWO;AACLH,MAAAA,WAAW,CAAC,CAAC,CAAF,CAAX;AACAG,MAAAA,YAAY,CAAC,CAAC,CAAF,CAAZ;AACD;AACF,GAhBD;;AAkBApB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,KAAK,CACF,+DAA8DJ,QAAS,QAAOE,SAAU,2BADtF,CAAL,CAGGG,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KANH;AAOD,GARQ,EAQN,CAACN,SAAD,EAAYF,QAAZ,CARM,CAAT;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,KAAK,CAACZ,OAAO,GAAI,QAAOQ,QAAS,SAAQE,SAAU,EAA9C,CAAL,CACGG,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESM,OAAD,IAAa;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,KAJH;AAKD,GANQ,EAMN,CAACT,SAAD,EAAYF,QAAZ,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEd;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxDD;;GAAMC,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\n\nconst Container = () => {\n  const [loading, setLoading] = useState(false);\n  const [userCoordinates, setUserCoordinates] = useState({'lat':null , 'long':null});\n\n  const APP_URL = \"http://localhost:5000/weather/\";\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setLatitude(position.coords.latitude);\n          setLongitude(position.coords.longitude);\n        },\n        (error) => {\n          setLatitude(-1);\n          setLongitude(-1);\n        }\n      );\n    } else {\n      setLatitude(-1);\n      setLongitude(-1);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1`\n    )\n      .then((response) => response.json())\n      .then((location) => {\n        console.log(location);\n      });\n  }, [longitude, latitude]);\n\n  useEffect(() => {\n    fetch(APP_URL + `?lat=${latitude}&long=${longitude}`)\n      .then((response) => response.json())\n      .then((forcast) => {\n        console.log(forcast);\n      });\n  }, [longitude, latitude]);\n\n  return (\n    <div className=\"container\">\n      <Header className=\"header\" />\n      <div className=\"header-bg\">\n        <img className=\"header-bgImg\" src={MainBG} />\n      </div>\n      <MainBanner />\n      <Forcast />\n    </div>\n  );\n};\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}