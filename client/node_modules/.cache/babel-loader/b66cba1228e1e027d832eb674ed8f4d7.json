{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\nimport api from \"api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Container = () => {\n  _s();\n\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [userCoordinates, setUserCoordinates] = useState({\n    lat: null,\n    long: null\n  });\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  function showPosition(position) {\n    x.innerHTML = \"Latitude: \" + position.coords.latitude + \"<br>Longitude: \" + position.coords.longitude;\n  }\n\n  useEffect(() => {\n    getForcast();\n  }, []);\n\n  const getForcast = async () => {\n    setLoading(true);\n    api.getData().then(res => {\n      if (res.status == 200) {\n        setNews(res.data);\n      } else {\n        setNews([]);\n      }\n\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header-bgImg\",\n        src: MainBG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Forcast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"187OJk5iPCN5czASv+dLM/FFXiM=\");\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/src/components/Container.js"],"names":["React","useEffect","useState","Header","MainBanner","Forcast","MainBG","api","Container","news","setNews","loading","setLoading","userCoordinates","setUserCoordinates","lat","long","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","x","innerHTML","coords","latitude","longitude","getForcast","getData","then","res","status","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,eAAD,EAAmBC,kBAAnB,IAAyCZ,QAAQ,CAAC;AAACa,IAAAA,GAAG,EAAC,IAAL;AAAUC,IAAAA,IAAI,EAAC;AAAf,GAAD,CAAvD;;AAEJ,WAASC,WAAT,GAAuB;AACrB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACD;AACF;;AAED,WAASF,YAAT,CAAsBG,QAAtB,EAAgC;AAC9BC,IAAAA,CAAC,CAACC,SAAF,GAAc,eAAeF,QAAQ,CAACG,MAAT,CAAgBC,QAA/B,GACd,iBADc,GACMJ,QAAQ,CAACG,MAAT,CAAgBE,SADpC;AAED;;AAEG5B,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,UAAU;AACX,GAFM,EAEJ,EAFI,CAAT;;AAIE,QAAMA,UAAU,GAAG,YAAY;AAC7BlB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,GAAG,CAACwB,OAAJ,GAAcC,IAAd,CAAoBC,GAAD,IAAS;AAC1B,UAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrBxB,QAAAA,OAAO,CAACuB,GAAG,CAACE,IAAL,CAAP;AACD,OAFD,MAEO;AACLzB,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD;AAQD,GAVD;;AAYF,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEN;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7CD;;GAAME,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\nimport api from \"api\";\n\nconst Container = () => {\n   \n    const [news, setNews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [userCoordinates , setUserCoordinates] = useState({lat:null,long:null});\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else {\n    console.log(\"Geolocation is not supported by this browser.\");\n  }\n}\n\nfunction showPosition(position) {\n  x.innerHTML = \"Latitude: \" + position.coords.latitude +\n  \"<br>Longitude: \" + position.coords.longitude;\n}\n\n    useEffect(() => {\n        getForcast();\n      }, []);\n\n      const getForcast = async () => {\n        setLoading(true);\n        api.getData().then((res) => {\n          if (res.status == 200) {\n            setNews(res.data);\n          } else {\n            setNews([]);\n          }\n          setLoading(false);\n        });\n      };\n    \n    return (\n        <div className=\"container\">\n            <Header className=\"header\"/>\n            <div className=\"header-bg\">\n                <img className=\"header-bgImg\" src={MainBG} />\n            </div>\n            <MainBanner />\n            <Forcast />\n        </div>\n    );\n};\nexport default Container;"]},"metadata":{},"sourceType":"module"}