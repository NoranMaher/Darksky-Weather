{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/client/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Container = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [userCoordinates, setUserCoordinates] = useState({\n    lat: null,\n    long: null\n  });\n  const lat = \"30.000\";\n  const long = \"31.000\";\n  const APP_URL = 'http://localhost:5000/weather/';\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        this.setState({\n          latitude: -1,\n          longitude: -1\n        });\n      });\n    } else {\n      this.setState({\n        latitude: -1,\n        longitude: -1\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetch(APP_URL + `?lat=${lat}&long=${long}`).then(response => response.json()).then(forcast => {\n      console.log(forcast);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header-bgImg\",\n        src: MainBG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Forcast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"ClQuXHYzFtxndaRZ+VwY/Bz4qQw=\");\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/client/src/components/Container.js"],"names":["React","useEffect","useState","Header","MainBanner","Forcast","MainBG","Container","loading","setLoading","userCoordinates","setUserCoordinates","lat","long","APP_URL","getLocation","navigator","geolocation","getCurrentPosition","position","setState","latitude","coords","longitude","error","fetch","then","response","json","forcast","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,eAAD,EAAmBC,kBAAnB,IAAyCT,QAAQ,CAAC;AAACU,IAAAA,GAAG,EAAC,IAAL;AAAUC,IAAAA,IAAI,EAAC;AAAf,GAAD,CAAvD;AACA,QAAMD,GAAG,GAAG,QAAZ;AACA,QAAMC,IAAI,GAAC,QAAX;AACA,QAAMC,OAAO,GAAG,gCAAhB;;AAGF,QAAOC,WAAW,GAAC,MAAI;AACnB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;AACZ,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAEF,QAAQ,CAACG,MAAT,CAAgBD,QADd;AAEZE,UAAAA,SAAS,EAAEJ,QAAQ,CAACG,MAAT,CAAgBC;AAFf,SAAd;AAID,OANH,EAOGC,KAAD,IAAW;AACT,aAAKJ,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,CAAC,CADC;AAEZE,UAAAA,SAAS,EAAE,CAAC;AAFA,SAAd;AAID,OAZH;AAcD,KAfD,MAeO;AACL,WAAKH,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,CAAC,CADC;AAEZE,QAAAA,SAAS,EAAE,CAAC;AAFA,OAAd;AAID;AACF,GAtBH;;AAyBEtB,EAAAA,SAAS,CAAC,MAAI;AAEbwB,IAAAA,KAAK,CAACX,OAAO,GAAE,QAAOF,GAAI,SAAQC,IAAK,EAAlC,CAAL,CACEa,IADF,CACOC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADjB,EAEEF,IAFF,CAEOG,OAAO,IAAE;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAJF;AAKA,GAPQ,EAOP,EAPO,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEvB;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArDD;;GAAMC,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport Header from \"components/Header\";\nimport MainBanner from \"components/MainBanner\";\nimport Forcast from \"components/Forcast\";\nimport MainBG from \"../imgs/Background.png\";\n\nconst Container = () => {\n   \n    const [loading, setLoading] = useState(false);\n    const [userCoordinates , setUserCoordinates] = useState({lat:null,long:null});\n    const lat = \"30.000\";\n    const long=\"31.000\";\n    const APP_URL = 'http://localhost:5000/weather/';\n    \n\n  const  getLocation=()=>{\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            this.setState({\n              latitude: position.coords.latitude, \n              longitude: position.coords.longitude\n            });\n          },\n          (error) => {\n            this.setState({\n              latitude: -1,\n              longitude: -1\n            });\n          }\n        );\n      } else {\n        this.setState({\n          latitude: -1,\n          longitude: -1\n        });\n      }\n    }\n  \n\n    useEffect(()=>{\n\n     fetch(APP_URL+`?lat=${lat}&long=${long}`)\n      .then(response=>response.json())\n      .then(forcast=>{\n        console.log(forcast)\n      })\n    },[])\n    \n    return (\n        <div className=\"container\">\n            <Header className=\"header\"/>\n            <div className=\"header-bg\">\n                <img className=\"header-bgImg\" src={MainBG} />\n            </div>\n            <MainBanner />\n            <Forcast />\n        </div>\n    );\n};\nexport default Container;"]},"metadata":{},"sourceType":"module"}