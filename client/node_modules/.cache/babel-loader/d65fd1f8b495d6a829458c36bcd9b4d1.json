{"ast":null,"code":"var _jsxFileName = \"/home/elgohary/Noran-Task/insta-weather/client/src/components/Forcast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DailyForcast from \"components/DailyForcast\";\nimport HourlyForcast from \"components/HourlyForcast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forcast = props => {\n  _s();\n\n  const {\n    daily,\n    hourly\n  } = props;\n  const [activeType, setActiveType] = useState(\"hourly\");\n\n  const handlePanalToggle = type => {\n    if (activeType !== type) {\n      setActiveType(type);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forcastPanal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forcastPanal-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handlePanalToggle('hourly'),\n        className: `${activeType == \"hourly\" && \"active\"} type-item`,\n        children: \"Hourly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handlePanalToggle('daily'),\n        className: `${activeType == \"daily\" && \"active\"} type-item`,\n        children: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), activeType == \"hourly\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forcastPanal-item\",\n      children: /*#__PURE__*/_jsxDEV(HourlyForcast, {\n        hourly: hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forcasrPanal-item\",\n      children: /*#__PURE__*/_jsxDEV(DailyForcast, {\n        daily: daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Forcast, \"ofyFXEFUk6w4Tfo/fgosg4mM77w=\");\n\n_c = Forcast;\nexport default Forcast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forcast\");","map":{"version":3,"sources":["/home/elgohary/Noran-Task/insta-weather/client/src/components/Forcast.js"],"names":["React","useState","DailyForcast","HourlyForcast","Forcast","props","daily","hourly","activeType","setActiveType","handlePanalToggle","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,QAAD,CAA5C;;AAEA,QAAMS,iBAAiB,GAAIC,IAAD,IAAU;AAClC,QAAGH,UAAU,KAAKG,IAAlB,EAAuB;AACnBF,MAAAA,aAAa,CAACE,IAAD,CAAb;AACH;AACF,GAJD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAMD,iBAAiB,CAAC,QAAD,CADlC;AAEE,QAAA,SAAS,EAAG,GAAEF,UAAU,IAAI,QAAd,IAA0B,QAAS,YAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACG,QAAA,OAAO,EAAE,MAAME,iBAAiB,CAAC,OAAD,CADnC;AAEE,QAAA,SAAS,EAAG,GAAEF,UAAU,IAAI,OAAd,IAAyB,QAAS,YAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGA,UAAU,IAAI,QAAd,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CApCD;;GAAMF,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DailyForcast from \"components/DailyForcast\";\nimport HourlyForcast from \"components/HourlyForcast\";\n\nconst Forcast = (props) => {\n  const { daily, hourly } = props;\n  const [activeType, setActiveType] = useState(\"hourly\");\n\n  const handlePanalToggle = (type) => {\n    if(activeType !== type){\n        setActiveType(type);\n    }\n  };\n  return (\n    <div className=\"forcastPanal\">\n      <div className=\"forcastPanal-nav\">\n        <span\n          onClick={() => handlePanalToggle('hourly')}\n          className={`${activeType == \"hourly\" && \"active\"} type-item`}\n        >\n          Hourly\n        </span>\n        <span\n           onClick={() => handlePanalToggle('daily')}\n          className={`${activeType == \"daily\" && \"active\"} type-item`}\n        >\n          Daily\n        </span>\n      </div>\n      {activeType == \"hourly\" ? (\n        <div className=\"forcastPanal-item\">\n          <HourlyForcast hourly={hourly} />\n        </div>\n      ) : (\n        <div className=\"forcasrPanal-item\">\n          <DailyForcast daily={daily} />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Forcast;\n"]},"metadata":{},"sourceType":"module"}